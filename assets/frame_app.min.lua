local a=require('data.min')local b=require('battery.min')local c=require('camera.min')local d=require('code.min')local e=require('plain_text.min')TEXT_MSG=0x0b;CAMERA_SETTINGS_MSG=0x0d;AUDIO_SUBS_MSG=0x30;TAP_SUBS_MSG=0x10;a.parsers[TEXT_MSG]=e.parse_plain_text;a.parsers[CAMERA_SETTINGS_MSG]=c.parse_camera_settings;a.parsers[AUDIO_SUBS_MSG]=d.parse_code;a.parsers[TAP_SUBS_MSG]=d.parse_code;AUDIO_DATA_NON_FINAL_MSG=0x05;AUDIO_DATA_FINAL_MSG=0x06;TAP_MSG=0x09;function handle_tap()pcall(frame.bluetooth.send,string.char(TAP_MSG))end;function print_text()local f=0;for g in a.app_data[TEXT_MSG].string:gmatch("([^\n]*)\n?")do if g~=""then frame.display.text(g,1,f*60+1)f=f+1 end end end;function app_loop()frame.display.text(" ",1,1)frame.display.show()local h=0;local i=false;local j=''local k=frame.bluetooth.max_length()if k%2==1 then k=k-1 end;while true do rc,err=pcall(function()local l=a.process_raw_items()if l>0 then if a.app_data[TEXT_MSG]~=nil and a.app_data[TEXT_MSG].string~=nil then print_text()frame.display.show()end;if a.app_data[TAP_SUBS_MSG]~=nil then if a.app_data[TAP_SUBS_MSG].value==1 then frame.imu.tap_callback(handle_tap)else frame.imu.tap_callback(nil)end;a.app_data[TAP_SUBS_MSG]=nil end;if a.app_data[CAMERA_SETTINGS_MSG]~=nil then print('photo requested')rc,err=pcall(c.camera_capture_and_send,a.app_data[CAMERA_SETTINGS_MSG])if rc==false then print(err)end;a.app_data[CAMERA_SETTINGS_MSG]=nil end;if a.app_data[AUDIO_SUBS_MSG]~=nil then if a.app_data[AUDIO_SUBS_MSG].value==1 then j=''pcall(frame.microphone.start,{sample_rate=8000,bit_depth=16})i=true;frame.display.text("\u{F0010}",1,1)frame.display.show()else pcall(frame.microphone.stop)frame.display.text(" ",1,1)frame.display.show()end;a.app_data[AUDIO_SUBS_MSG]=nil end end end)if rc==false then print(err)frame.display.text(" ",1,1)frame.display.show()frame.sleep(0.04)break end;if i then for f=1,20 do j=frame.microphone.read(k)if j==nil then pcall(frame.bluetooth.send,string.char(AUDIO_DATA_FINAL_MSG))frame.sleep(0.0025)i=false;break elseif j~=''then pcall(frame.bluetooth.send,string.char(AUDIO_DATA_NON_FINAL_MSG)..j)frame.sleep(0.0025)end end end;h=b.send_batt_if_elapsed(h,120)if not i then frame.sleep(0.1)end end end;app_loop()