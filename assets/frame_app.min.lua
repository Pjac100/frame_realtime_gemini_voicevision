local a=require('data.min')local b=require('battery.min')local c=require('code.min')local d=require('plain_text.min')TEXT_MSG=0x0b;AUDIO_SUBS_MSG=0x30;TAP_SUBS_MSG=0x10;a.parsers[TEXT_MSG]=d.parse_plain_text;a.parsers[AUDIO_SUBS_MSG]=c.parse_code;a.parsers[TAP_SUBS_MSG]=c.parse_code;AUDIO_DATA_NON_FINAL_MSG=0x05;AUDIO_DATA_FINAL_MSG=0x06;TAP_MSG=0x09;function handle_tap()pcall(frame.bluetooth.send,string.char(TAP_MSG))end;function print_text()local e=0;for f in a.app_data[TEXT_MSG].string:gmatch("([^\n]*)\n?")do if f~=""then frame.display.text(f,1,e*60+1)e=e+1 end end end;function app_loop()frame.display.text(" ",1,1)frame.display.show()local g=0;local h=false;local i=''local j=frame.bluetooth.max_length()if j%2==1 then j=j-1 end;while true do rc,err=pcall(function()local k=a.process_raw_items()if k>0 then if a.app_data[TEXT_MSG]~=nil and a.app_data[TEXT_MSG].string~=nil then print_text()frame.display.show()end;if a.app_data[TAP_SUBS_MSG]~=nil then if a.app_data[TAP_SUBS_MSG].value==1 then frame.imu.tap_callback(handle_tap)else frame.imu.tap_callback(nil)end;a.app_data[TAP_SUBS_MSG]=nil end;if a.app_data[AUDIO_SUBS_MSG]~=nil then if a.app_data[AUDIO_SUBS_MSG].value==1 then i=''pcall(frame.microphone.start,{sample_rate=8000,bit_depth=16})h=true;frame.display.text("\u{F0010}",1,1)frame.display.show()else pcall(frame.microphone.stop)frame.display.text(" ",1,1)frame.display.show()end;a.app_data[AUDIO_SUBS_MSG]=nil end end end)if rc==false then print(err)frame.display.text(" ",1,1)frame.display.show()frame.sleep(0.04)break end;if h then for e=1,20 do i=frame.microphone.read(j)if i==nil then pcall(frame.bluetooth.send,string.char(AUDIO_DATA_FINAL_MSG))frame.sleep(0.0025)h=false;break elseif i~=''then pcall(frame.bluetooth.send,string.char(AUDIO_DATA_NON_FINAL_MSG)..i)frame.sleep(0.0025)end end end;g=b.send_batt_if_elapsed(g,120)if not h then frame.sleep(0.1)end end end;app_loop()